{"version":3,"sources":["config.ts","connectors.ts","components/spinner.tsx","services/firebase.ts","models/salt_season.ts","services/etherium/index.ts","services/etherium/contracts/sellerv1.ts","components/eth.tsx","components/image.tsx","saltseason_cards/_salt_season.tsx","saltseason_cards/index.tsx","services/web3_hooks.ts","app.tsx","reportWebVitals.ts","index.tsx"],"names":["eip1152contractAddress","minterAddress","firebaseConfig","apiKey","projectId","INFURA_JSON_RPC_API","1","42","SELLER_CONTRACT_ADDRESS","POLLING_INTERVAL","injected","InjectedConnector","supportedChainIds","WalletConnectConnector","rpc","config","bridge","qrcode","pollingInterval","LedgerConnector","chainId","url","TrezorConnector","manifestEmail","manifestAppUrl","Spinner","innerWidth","this","props","innerHeight","style","height","width","display","dangerouslySetInnerHTML","__html","React","Component","Firebase","initializeApp","collection","firestore","indexByChainId","a","where","get","snapshot","items","docs","map","doc","ss","data","id","TokenId","getJsonRpcProvider","jsonRPCAPIURL","network","JsonRpcProvider","contractABI","getContract","contractAddress","providerOrSigner","Contract","formatEther","number","Image","state","loading","backgroundColor","position","top","left","backgroundImage","imageUrl","backgroundPosition","backgroundSize","backgroundRepeat","SaltSeasonComponent","saltSeason","provider","ETHERIUM","context","useWeb3React","account","library","useState","undefined","contract","setContract","useEffect","_contract","SELLERV1","sellerContractAddress","currentPrice","setCurrentPrice","priceStep","setPriceStep","tokenPurchaseEvents","setTokenPurchaseEvents","queryFilter","filters","TokenPurchase","then","events","filter","e","event","seasonUrl","Card","margin","CardActionArea","href","textDecoration","posterUrls","CardContent","fontSize","className","title","CardActions","padding","flexDirection","LinearProgress","variant","color","value","Math","min","length","tokenIds","Button","flex","borderRadius","boxShadow","Reducer","connector","deactivate","active","error","activatingConnector","setActivatingConnector","suppress","activate","ethereum","window","on","handleConnect","console","log","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","WEB3HOOKS","tried","setTried","isAuthorized","catch","saltSeasons","setSaltSeasons","SaltSeason","auctions","actualChainId","setActualChainId","minHeight","fontWeight","textTransform","Box","marginTop","float","Icon","getLibrary","Web3Provider","AppWrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dc9ae23.chunk.js","sourcesContent":["const eip1152contractAddress = '0xd07dc4262bcdbf85190c01c996b4c06a461d2430'\n\nconst minterAddress = '0x1efcb24f92daa1e04ba52e3d891beecee00c629d'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC8DwM9z-H9cSTCqHR4UGEvW86jL63sre0\", // \"AIzaSyCccgoP_7ndBWqvZkPbSml3JV4RpRIyERU\",\n  // authDomain: \"saltandsatoshi.firebaseapp.com\",\n  // databaseURL: \"https://saltandsatoshi.firebaseio.com\",\n  projectId: \"saltandsatoshi\",\n  // storageBucket: \"saltandsatoshi.appspot.com\",\n  // messagingSenderId: \"629543041272\",\n  // appId: \"1:629543041272:web:80d0b9de555810bbc9e30d\"\n}\n\nconst INFURA_JSON_RPC_API = {\n  1: `https://mainnet.infura.io/v3/663207cc32894545b804fbc519d9fa2a`,\n  42: `https://kovan.infura.io/v3/663207cc32894545b804fbc519d9fa2a`,\n}\n\nconst SELLER_CONTRACT_ADDRESS = {\n  42: `0xD837F0658c74191056f222b3aCf3995e75AA3703`,\n}\n\nexport default {\n  eip1152contractAddress,\n  minterAddress,\n  firebaseConfig,\n  INFURA_JSON_RPC_API,\n  SELLER_CONTRACT_ADDRESS,\n}","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { LedgerConnector } from '@web3-react/ledger-connector'\nimport { TrezorConnector } from '@web3-react/trezor-connector'\n\nimport config from './config'\n\nconst POLLING_INTERVAL = 12000\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 42] })\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { \n    1: config.INFURA_JSON_RPC_API[1],\n  },\n  bridge: 'https://bridge.walletconnect.org',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL\n})\n\n\nexport const ledger = new LedgerConnector({\n  chainId: 1,\n  url: config.INFURA_JSON_RPC_API[1],\n  pollingInterval: POLLING_INTERVAL\n})\n\nexport const trezor = new TrezorConnector({\n  chainId: 1,\n  url: config.INFURA_JSON_RPC_API[1],\n  pollingInterval: POLLING_INTERVAL,\n  manifestEmail: 'dummy@abc.xyz',\n  manifestAppUrl: 'http://localhost:1234'\n})","import React from 'react'\n\ntype Props = {\n  width: string\n  height: string\n  innerWidth?: string\n  innerHeight?: string\n}\n\nclass Spinner extends React.Component<Props> {\n  render() {\n    const innerWidth = this.props.innerWidth || '200px'\n    const innerHeight = this.props.innerWidth || '200px'\n\n    return (\n      <div \n        style={{\n          height: this.props.height,\n          width: this.props.width,\n          display: 'flex'\n        }}\n        dangerouslySetInnerHTML={{\n          __html: `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin:auto;display:block;\" width=\"${innerWidth}\" height=\"${innerHeight}\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n          <g transform=\"translate(50 50)\">\n            <g transform=\"scale(0.26)\">\n              <g transform=\"translate(-50 -50)\">\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"0.7575757575757576s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#f72585\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\"></path>\n                </g>\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"1.0101010101010102s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#7209b7\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\" transform=\"rotate(90 50 50)\"></path>\n                </g>\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"1.5151515151515151s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#3a0ca3\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\" transform=\"rotate(180 50 50)\"></path>\n                </g>\n                <g>\n                  <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" values=\"0 50 50;360 50 50\" keyTimes=\"0;1\" dur=\"3.0303030303030303s\"></animateTransform>\n                  <path fill-opacity=\"0.8\" fill=\"#4361ee\" d=\"M50 50L50 0A50 50 0 0 1 100 50Z\" transform=\"rotate(270 50 50)\"></path>\n                </g>\n              </g>\n            </g>\n          </g>\n          </svg>`\n        }}\n      />)\n    }\n}\n\nexport default Spinner","import Firebase from 'firebase'\nimport \"firebase/firestore\"\n\nimport config from '../config'\n\nFirebase.initializeApp(config.firebaseConfig)\nconst firestore = Firebase.firestore()\n\nexport { firestore }","import * as Firebase from '../services/firebase'\n\nexport type SaltSeason = {\n  id: string\n  number: string\n  title: string\n  posterUrls: string[]\n  chainId: 1 | 42\n  erc721ContractAddress: string\n  sellerContractAddress: string\n  tokenIds: number[]\n  descriptionHtml: string\n  // purchasedItems: number\n}\n\nconst collection = Firebase.firestore.collection('saltseasons')\n\nexport async function indexByChainId(chainId: number) {\n  const snapshot = await collection.where('chainId', '==', chainId).get()\n  const items = snapshot.docs.map(doc => {\n    var ss = doc.data() as SaltSeason\n    ss.id = doc.id\n    return ss\n  })\n  return items\n}\n\nexport async function update(ss: SaltSeason) {\n  const doc = collection.doc(ss.id)\n  await doc.set(ss)\n}","import { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\n// EIP 1155\n\nconst TokenId = '20272'\n\nfunction getJsonRpcProvider(jsonRPCAPIURL: string, network: number): JsonRpcProvider {\n  const provider = new JsonRpcProvider(jsonRPCAPIURL, network)\n  return provider\n}\n\nexport default { TokenId, getJsonRpcProvider }","import { Contract } from '@ethersproject/contracts'\nimport { JsonRpcProvider, JsonRpcSigner } from '@ethersproject/providers'\n\nconst contractABI = '[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_priceStep\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Pause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Unpause\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"currentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"purchaseToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"sendTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\nexport function getContract(contractAddress: string, providerOrSigner: JsonRpcProvider | JsonRpcSigner) {\n  return new Contract(contractAddress, contractABI, providerOrSigner)\n}\n\nexport default { contractABI, getContract }","import React from 'react'\n\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther } from '@ethersproject/units'\n\nfunction Number(props: {\n  number: BigNumber\n}) {\n  return <>{`Ξ${formatEther(props.number)}`}</>\n}\n\nfunction AddressLink(props: {\n  address: string\n  chainId: 1 | 42\n}) {\n  const url = `https://${ props.chainId === 42 ? `kovan.` : ``}etherscan.io/address/${props.address}`\n  return <a href={url} target=\"_blank\">{`${props.address.slice(0, 10)}...`}</a>\n}\n\nexport default { Number, AddressLink }","import React from 'react'\n\nimport Spinner from './spinner'\n\ntype Props = {\n  width: string\n  height: string\n  imageUrl: string\n  backgroundColor?: string\n}\n\ntype State = {\n  loading: boolean\n}\n\nclass Image extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      loading: true,\n    }\n  }\n\n  // async componentDidMount() {\n  //   if (loadedImages.includes(this.props.imageUrl)) {\n  //     this.setState({ loading: false })\n  //     return\n  //   }\n\n  //   await this.preloadImage()\n  //   this.setState({ loading: false })\n  // }\n\n  // async preloadImage() {\n  //   return new Promise((resolve, reject) => {\n  //     const i = new window.Image()\n  //     i.onload = () => {\n  //       loadedImages.push(this.props.imageUrl)\n  //       resolve(0)\n  //     }\n  //     i.onerror = reject\n  //     i.src = this.props.imageUrl\n  //   })\n  // }\n\n  render() {\n    // if (this.state.loading) {\n    //   return (\n    //     <Spinner \n    //       height={this.props.height}\n    //       width={this.props.width}\n    //     />)\n    // }\n\n    return (\n      <div\n        style={{\n          display: 'block',\n          height: this.props.height,\n          width: this.props.width,\n          backgroundColor: this.props.backgroundColor\n        }}\n      >\n        <div\n          style={{\n            position: 'absolute',\n            top: 0, left: 0,\n            height: this.props.height,\n            width: this.props.width,\n          }}\n        >\n          <Spinner \n            height={this.props.height}\n            width={this.props.width}\n          />\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            top: 0, left: 0,\n            backgroundImage: `url(${this.props.imageUrl})`,\n            backgroundPosition: 'center',\n            backgroundSize: 'contain',\n            backgroundRepeat: 'no-repeat',\n            height: this.props.height,\n            width: this.props.width,\n          }}\n        />\n        \n      </div>)\n  } \n}\n\nexport default Image","import React from 'react'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport { Card, CardMedia, CardContent, CardActions, CardActionArea, Button, LinearProgress } from '@material-ui/core'\nimport config from '../config'\n\nimport { Contract } from '@ethersproject/contracts'\nimport ETHERIUM from '../services/etherium'\nimport SELLERV1 from '../services/etherium/contracts/sellerv1'\nimport ETH from '../components/eth'\nimport * as SaltSeason from '../models/salt_season'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport Image from  '../components/image'\nimport Spinner from '../components/spinner'\n\ntype Props = {\n  saltSeason: SaltSeason.SaltSeason\n}\n\nfunction SaltSeasonComponent(props: Props) {\n  const { saltSeason } = props\n  const provider = ETHERIUM.getJsonRpcProvider(config.INFURA_JSON_RPC_API[saltSeason.chainId], saltSeason.chainId);\n\n  const context = useWeb3React<Web3Provider>()\n  const { account, library } = context\n\n  const [contract, setContract] = React.useState<Contract | undefined>(undefined)\n  React.useEffect(() => {\n    if (contract !== undefined) { return }\n    const _contract = SELLERV1.getContract(saltSeason.sellerContractAddress, provider)\n    setContract(_contract)\n  }, [contract])\n\n  const [currentPrice, setCurrentPrice] = React.useState<BigNumber | undefined>(undefined)\n  React.useEffect(() => {\n    if (!!currentPrice) { return } // guard: already done\n    if (!contract) { return } // guard\n\n    (async () => {\n      const currentPrice = await contract.currentPrice()\n      setCurrentPrice(currentPrice)\n    })()\n  }, [currentPrice, contract])\n\n  const [priceStep, setPriceStep] = React.useState<BigNumber | undefined>(undefined)\n  React.useEffect(() => {\n    if (!!priceStep) { return } // guard: already done\n    if (!contract) { return } // guard\n\n    (async () => {\n      const priceStep = await contract.priceStep()\n      setPriceStep(priceStep)\n    })()\n  }, [priceStep, contract])\n\n  const [tokenPurchaseEvents, setTokenPurchaseEvents] = React.useState<Event[] | undefined>(undefined)\n  React.useEffect(() => {\n    if (!contract) { return }\n    if (tokenPurchaseEvents !== undefined) { return }\n    (contract as any).queryFilter(contract.filters.TokenPurchase).then((events: Event[]) => {\n      // console.log(events)\n      setTokenPurchaseEvents(events.filter(e => (e as any).event === \"TokenPurchase\"))\n    })\n  }, [contract, tokenPurchaseEvents])\n\n  const seasonUrl = `https://marketplace.saltandsatoshi.com/#${saltSeason.id}`\n\n  return (\n    <Card style={{margin: '2em', display: 'inline-block'}}>\n      <CardActionArea>\n        <a href={seasonUrl} style={{textDecoration: 'none'}}>\n          <Image\n            imageUrl={saltSeason.posterUrls[0]}\n            height='300px'\n            width='300px'\n            backgroundColor='black'\n          />\n          {/* <CardMedia\n            image={saltSeason.posterUrls[0]}\n            style={{height: 300, minWidth: 300}}\n          /> */}\n        </a>\n        <CardContent>\n          <a href={seasonUrl} style={{textDecoration: 'none'}}>\n            <p style={{ fontSize: '2em' }} className=\"with-cool-font\">Season {saltSeason.number}</p>\n            <br/>\n            <h5 className=\"with-cool-font\">{saltSeason.title}</h5>\n          </a>\n        </CardContent>\n      </CardActionArea>\n      <CardActions style={{padding: 0}}>\n      \n        <div style={{display: 'flex', flexDirection: 'column', width: '100%'}}>\n          { !!tokenPurchaseEvents ? (\n            <LinearProgress \n              variant='determinate' color=\"secondary\"\n              value={100*Math.min(tokenPurchaseEvents.length/saltSeason.tokenIds.length, 1.0)}\n            />)\n            : null }\n          <div style={{display: 'flex'}}>\n            <Button variant=\"contained\" color=\"secondary\" style={{flex: 1, borderRadius: 0, padding: '1em', boxShadow: 'none', backgroundColor: '#d33747'}}>\n              <div style={{display: 'flex', flexDirection: 'column'}} className=\"with-cool-font\">\n                <span style={{fontSize: 'x-small'}}>Edition of</span>\n                <span style={{fontSize: 'x-large'}}>{saltSeason.tokenIds.length}</span>\n              </div>\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" style={{flex: 1, borderRadius: 0, padding: '1em', boxShadow: 'none', backgroundColor: '#d33747'}}>\n              <div style={{display: 'flex', flexDirection: 'column'}} className=\"with-cool-font\">\n                <span style={{fontSize: 'x-small'}}>Price</span>\n                <span style={{fontSize: 'x-large'}}>\n                  {!currentPrice ? \n                    <Spinner height=\"46px\" width=\"46px\" innerHeight=\"46px\" innerWidth=\"46px\"/> :\n                    <ETH.Number number={currentPrice}/>}\n                </span>\n              </div>\n            </Button>\n            <Button variant=\"contained\" color=\"secondary\" style={{flex: 1, borderRadius: 0, padding: '1em', boxShadow: 'none', backgroundColor: '#d33747'}}>\n              <div style={{display: 'flex', flexDirection: 'column'}} className=\"with-cool-font\">\n                <span style={{fontSize: 'x-small'}}>Sold</span>\n                <span style={{fontSize: 'x-large'}}>\n                  { !!tokenPurchaseEvents ? <>{tokenPurchaseEvents.length}</> : null }\n                </span>\n              </div>\n            </Button>\n          </div>\n        </div>\n        \n      </CardActions>\n    </Card>)\n}\n\nexport default SaltSeasonComponent","import React from 'react'\n\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport * as WEB3HOOKS from '../services/web3_hooks'\n\nimport Spinner from '../components/spinner'\n\nimport * as SaltSeason from '../models/salt_season'\nimport SaltSeasonComponent from './_salt_season'\n\nimport { Box, Icon } from '@material-ui/core'\n\nconst DEFAULT_CHAIN_ID = 1\n\nfunction Reducer() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, account, library, deactivate, active, error, chainId } = context\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<any>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = WEB3HOOKS.useEagerConnect()\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  WEB3HOOKS.useInactiveListener(!triedEager || !!activatingConnector)\n\n  const [saltSeasons, setSaltSeasons] = React.useState<SaltSeason.SaltSeason[] | undefined>(undefined)\n  React.useEffect(() => { // Load auctions from Firebase\n    if (!!saltSeasons) { return } // guard: already done\n    // if (!chainId) { return }\n\n    (async () => {\n      const auctions = await SaltSeason.indexByChainId(chainId || DEFAULT_CHAIN_ID)\n      setSaltSeasons(auctions)\n    })()\n  }, [saltSeasons, chainId])\n\n  // Trick to reset on chain change\n  const [actualChainId, setActualChainId] = React.useState<number | undefined>(chainId)\n  React.useEffect(() => {\n    if (!!actualChainId && actualChainId !== chainId) {\n      setSaltSeasons(undefined)\n    }\n    setActualChainId(chainId)\n  }, [actualChainId, chainId])\n\n  if (!saltSeasons) { return <Spinner height=\"200px\" width=\"200px\"/> }\n\n  return (\n    <div>\n      <section id=\"redemption-section\">\n        <div id=\"container19\" className=\"container default full screen\" style={{minHeight: 'auto'}}>\n          <div className=\"wrapper\">\n            <div className=\"inner\" style={{padding: '3em 3em 1em 3em'}}>\n              <h2 id=\"text33\" style={{ fontWeight: 'normal', textTransform: 'none', color: '#fff' }} className=\"with-cool-font\">Showcase</h2>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Box style={{marginTop: '3em', color: 'lightgray', float: 'left'}}>\n        {\n          saltSeasons.map(saltSeason => (\n            <SaltSeasonComponent saltSeason={saltSeason}/>\n          ))\n        }\n        {\n          saltSeasons.length == 0 && (\n            <Icon style={{margin: 'auto', fontSize: 'xxx-large'}}>access_time</Icon>)\n        }\n      </Box>\n      \n    </div>)\n}\n\nexport default Reducer","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../connectors'\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React()\n\n  const [tried, setTried] = useState(false)\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized: boolean) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true)\n        })\n      } else {\n        setTried(true)\n      }\n    })\n  }, [ activate ]) // intentionally only running on mount (make sure it's only mounted once :))\n\n  // if the connection worked, wait until we get confirmation of that to flip the flag\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true)\n    }\n  }, [tried, active])\n\n  return tried\n}\n\nexport function useInactiveListener(suppress: boolean = false) {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect((): any => {\n    const { ethereum } = window as any\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId: string | number) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts: string[]) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId: string | number) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}","import React from 'react'\n\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\n\nimport RedeemPage from './redeem_page/page'\nimport ShowcasePage from './showcase_page/page'\nimport AuctionsPage from './auctions_page/page'\nimport SaltSeasonsPage from './saltseasons/index'\nimport SaltSeasonCardsPage from './saltseason_cards/index'\n\nfunction getLibrary(provider: any): Web3Provider {\n  const library = new Web3Provider(provider)\n  return library\n}\n\nfunction AppWrapper() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      {/* <RedeemPage/> */}\n      {/* <ShowcasePage/> */}\n      {/* <AuctionsPage/> */}\n      {/* <SaltSeasonsPage/> */}\n      <SaltSeasonCardsPage/>\n    </Web3ReactProvider>\n  )\n}\n\nexport default AppWrapper\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}